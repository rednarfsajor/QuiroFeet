@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Registrar Venta";
}

<div class="container">
    <h1>Registrar Venta</h1>
    <p>Complete la información para procesar la venta.</p>

    @using (Html.BeginForm("RegisterSale", "Ventas", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <!-- Cliente -->
        <div class="form-group">
            <label for="id_cliente">Cliente</label>
            @Html.DropDownList("id_cliente", ViewBag.Clientes as SelectList, "Seleccione un cliente", new { @class = "form-control", required = "required" })
        </div>

        <!-- Productos disponibles -->
        <div id="productosContainer">
            <label>Productos</label>
            @{
                var productos = ViewBag.Productos as List<Analisis.BD.Productos>;
            }

            @if (productos != null && productos.Any())
            {
                int index = 0;
                foreach (var producto in productos)
                {
                    var inventario = producto.Inventario.FirstOrDefault(i => i.stock.HasValue && i.stock > 0);
                    if (inventario == null) { continue; }

                    string tipo = inventario.publico == 1 ? "Público" : "Prescripción";
                    int stock = inventario.stock ?? 0;

                    <div class="form-check mb-2">
                        <input class="form-check-input producto-checkbox" type="checkbox" name="productosSeleccionados[@index]" value="@producto.id" id="producto_@producto.id" />
                        <label class="form-check-label" for="producto_@producto.id">
                            @producto.nombre – ₡@producto.precio (@tipo) – Stock: @stock
                        </label>
                        <input type="number" class="form-control mt-1 cantidad-input" name="cantidades[@index]" placeholder="Cantidad" min="1" disabled />
                    </div>
                    index++;
                }

                <small id="alertaPrescripcion" class="text-danger" style="display:none;">
                    <i class="bi bi-exclamation-triangle-fill"></i> Validar que el cliente cuente con prescripción para productos seleccionados.
                </small>
            }
            else
            {
                <p class="text-danger">
                    <i class="bi bi-exclamation-circle-fill"></i> No hay productos disponibles en stock.
                </p>
            }
        </div>

        <!-- Botones -->
        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Registrar Venta</button>
            <a href="@Url.Action("ListSales", "Ventas")" class="btn btn-secondary">Cancelar</a>
        </div>
    }
</div>

<!-- Notificación -->
<div id="notification" class="notification" style="display:none;">
    Venta registrada exitosamente.
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('.producto-checkbox').forEach((checkbox) => {
                checkbox.addEventListener('change', function () {
                    const cantidadInput = this.parentElement.querySelector('.cantidad-input');
                    cantidadInput.disabled = !this.checked;
                    if (!this.checked) cantidadInput.value = '';
                });
            });

            document.getElementById("productosContainer").addEventListener("change", function () {
                const checkboxes = document.querySelectorAll(".producto-checkbox");
                const alerta = document.getElementById("alertaPrescripcion");
                let prescripcion = false;

                checkboxes.forEach(cb => {
                    if (cb.checked && cb.nextElementSibling.textContent.includes("Prescripción")) {
                        prescripcion = true;
                    }
                });

                alerta.style.display = prescripcion ? "block" : "none";
            });

            if (window.location.href.includes("success=true")) {
                const notification = document.getElementById("notification");
                notification.style.display = "block";
                setTimeout(() => {
                    notification.style.display = "none";
                }, 3000);
            }
        });
    </script>
}

<style>
    .container {
        max-width: 700px;
        margin: 40px auto;
        background: #fff;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #4CAF50;
        color: white;
        padding: 15px 30px;
        border-radius: 8px;
        font-size: 16px;
        z-index: 1000;
        animation: fadeInOut 3s ease;
    }

    @@keyframes fadeInOut {
        0% {
            opacity: 0;
        }

        10% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }
</style>
