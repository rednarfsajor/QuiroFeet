@model IEnumerable<Analisis.BD.Proveedores>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Lista de Proveedores";
}
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Vincula la fuente Poppins -->
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">

<div class="container">
    <h1>Proveedores Registrados</h1>
    <p>Reporte del listado de proveedores</p>

    <!-- Tabla de proveedores -->
    <table class="service-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Correo</th>
                <th>Contacto</th>
                <th>Numero</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var proveedores in Model)
            {
                <tr>
                    <td>@proveedores.id</td>
                    <td>@proveedores.nombre</td>
                    <td>@proveedores.correo</td>
                    <td>@proveedores.contacto</td>
                    <td>@proveedores.numero</td>
                    <td>
                        <!-- Botón Editar -->
                        <a href="@Url.Action("EditarProveedor", "Proveedores", new { id = proveedores.id })" class="btn-edit">
                            <i class="bi bi-pencil-fill"></i> Editar
                        </a>

                        <!-- Botón Eliminar con formulario POST -->
                        <a href="#" class="btn-delete btn-eliminar" data-id="@proveedores.id">
                            <i class="bi bi-trash-fill"></i> Eliminar
                        </a>

                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Estilos CSS -->
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: #f9fafb;
    }

    .container {
        max-width: 950px;
        margin: 60px auto;
        background-color: #ffffff;
        padding: 40px 30px;
        border-radius: 15px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    h1 {
        color: #234449;
        font-weight: 700;
        margin-bottom: 5px;
    }

    p {
        color: #3e77f8;
        margin-bottom: 30px;
    }

    .service-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
    }

        .service-table th, .service-table td {
            border: 1px solid #e0e0e0;
            padding: 12px;
            text-align: center;
            font-size: 0.95em;
        }

        .service-table th {
            background-color: #234449;
            color: #ffffff;
            font-weight: 600;
        }

        .service-table tbody tr:nth-child(even) {
            background-color: #f4f9f9;
        }

    .btn-edit, .btn-delete {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        padding: 8px 14px;
        border-radius: 8px;
        font-size: 0.9em;
        font-weight: 600;
        text-decoration: none;
        color: white;
        transition: background-color 0.3s, box-shadow 0.3s;
        margin-bottom: 5px; /* separación vertical si hay dos filas */
        margin-right: 5px; /* separación horizontal entre ellos */
    }

    .btn-edit {
        background-color: #3e77f8;
    }

        .btn-edit:hover {
            background-color: #234449;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

    .btn-delete {
        background-color: #3e77f8;
    }

        .btn-delete:hover {
            background-color: #234449;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

    i.bi {
        font-size: 1em;
    }

    .btn-edit {
        background-color: #3e77f8;
        color: white; /* Asegura texto e iconos blancos */
    }

        .btn-edit i.bi {
            color: white; /* ícono blanco */
        }

        .btn-edit:hover {
            background-color: #234449;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

    .btn-delete {
        background-color: #e74c3c; /* rojo bonito y amigable */
        color: white; /* texto blanco */
    }

        .btn-delete i.bi {
            color: white; /* ícono blanco */
        }

        .btn-delete:hover {
            background-color: #c0392b; /* rojo más oscuro al pasar el mouse */
            box-shadow: 0 4px 12px rgba(192, 57, 43, 0.5);
            transition: background-color 0.3s, box-shadow 0.3s;
        }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const botonesEliminar = document.querySelectorAll(".btn-eliminar");

        botonesEliminar.forEach(btn => {
            btn.addEventListener("click", function (e) {
                e.preventDefault();
                const proveedorId = this.getAttribute("data-id");

                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "Esta acción eliminará el proveedor.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#234449',
                    cancelButtonColor: '#aaa',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('@Url.Action("EliminarProveedor", "Proveedores")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            body: JSON.stringify({ id: proveedorId })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    '¡Eliminado!',
                                    data.message,
                                    'success'
                                ).then(() => {
                                    location.reload(); // Recarga para actualizar la tabla
                                });
                            } else {
                                Swal.fire(
                                    'Error',
                                    data.message,
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            Swal.fire(
                                'Error',
                                'Ocurrió un error al eliminar el proveedor.',
                                'error'
                            );
                        });
                    }
                });
            });
        });
    });
</script>
